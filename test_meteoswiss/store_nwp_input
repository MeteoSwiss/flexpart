#!/bin/bash
#+==============================================================================
# Store input for FLEXPLOT run in user store
#
# Author:      Pirmin Kaufmann
#-==============================================================================

# Settings (should be equal to settings in test-fp)
# --------
# File for automatic job numbering
job_no_file=$HOME/.flexpart_job
# Root directory for job directories (see also test-fp script)
job_root=$SCRATCH/flexpart/job
# File with some metadata missing in nc file (see also test-fp script)
plot_info_file=plot_info
# --------

# Function
# --------
function display_help {
    # Show script usage
    cat >&2 << EOF

Use pyflexplot to produce the standard plot set for the NAZ.
       
Usage: $tag [OPTION]... JOBDIR

  JOBDIR                 Directory in which job was run. FLEXPART output file
                         is searched in $job_root/JOBDIR/output
                         instead of current directory.

Mandatory arguments to long options are mandatory for short options too.
  -d, --debug            print out additional debug output
  -h, --help             display this help and exit
  -n, --dry-run          print commands without executing them

EOF
} # function display_help

# Initialization
# --------------
tag=$(basename $0)

# Parse arguments
# ---------------
iarg=0
while (( $# > 0 )) ; do
    case "$1" in
	-d | --debug)
	    debug=yes
	    ;;
	-n | --dry-run)
	    dry_run=yes
	    ;;
	-h | --help)
	    display_help
	    exit
	    ;;
	-*)
	    echo $tag: "Unknown option: $1"
	    exit 1
	    ;;
	*)
	    (( iarg++ ))
	    case $iarg in
		1)
		    jobdir="$1"
		    ;;
		*)  # Additional arguments
		    echo $tag: "Too many arguments: $1"
		    exit 1
		    ;;
	    esac
	    ;;
    esac
    shift
done

# Check argument: Job directory
if [[ -z $jobdir ]] ; then
    if [[ -f $job_no_file ]] ; then
	jobdir=$(cat $job_no_file)
	echo $tag: "Missing argument: Job name/number, assuming last: $jobdir"
    else
	echo $tag: "Missing argument: Job name/number"
	exit 1
    fi
fi

# Start Processing
# ----------------

# Option -n, --dry-run
if [[ -n $dry_run ]] ; then
    # Enable escape sequences in echo with option -e
    exe_cmd="echo -e \e[07;32m \e[0m  "
    echo $tag: "INFO: Option --dry-run set," \
	"printing commands without executing them."
    echo -n $tag: "Skipped commands are marked with: "
    $exe_cmd
fi

# Change to job directory
if [[ -n $jobdir ]] ; then
    gribdir=$job_root/$jobdir/grib
    pushd $job_root/$jobdir > /dev/null
else
    gribdir=.
fi
echo $tag: "Storing NWP input from: $gribdir"

# Derive variables job (job name or number) and resol (resolution)
# from test-fp.log
eval $(tail -n 1 test-fp.log | sed 's/.*\(resol=[a-z0-9]*\) .*\(job=[0-9]*\) .*/\1; \2/')

# Define preset, use pyflexplot --preset=? to obtain the list of presets
case "$resol" in
    1e) case_store=$STORE/CASES/FLEXPART-C1E-CTRL
	;;
    2e) case_store=$STORE/CASES/FLEXPART-C2E
	;;
    f) case_store=$STORE/CASES/FLEXPART-IFS-EUROPE
	;;
    g) case_store=$STORE/CASES/FLEXPART-IFS-GLOBAL
	;;
esac

# Derive basetime from file plot_info
# Load plot_info if present
if [[ -f output/$plot_info_file ]] ; then
    basetime=$(cat output/$plot_info_file)
    echo $tag: "Retrieved base time from output/$plot_info_file: $basetime"
    base_time_opt="--setup base_time ${basetime}"
else
    echo $tag: "Plot information file not found: output/$plot_info_file"
fi

echo $case_store/$basetime
$exe_cmd mkdir $case_store/$basetime
ls $case_store/$basetime
grep 'INFO.*/disp' job.log | sed 's|.*\(/scratch.*\)|\1|' | sort -u | xargs $exe_cmd cp -vt $case_store/$basetime


# End of script
exit
